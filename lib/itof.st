float_of_int : (* Asm.FunCall Global *)
	addi %fp,%sp,0 (* Global *)
	store %lr,%fp, 1 (* Global *)
	addi %sp,%sp,16 (* Global *)
	store %fp,%sp, 0 (* Global *)
	li %r5,8388608 (* at line 14 *)
	cmpd %r5,%r3(* at line 14 *)
	ble label65.if.true (* at line 14 *)
label65.if.false : (* Asm.Other at line 14 *)
	li %r6,1258291200 (* at line 22 *)
	add %r7,%r3,%r6 (* at line 22 *)
	store %r7,%fp, 5 (* at line 22 *)
	store %r6,%fp, 4 (* at line 22 *)
	store %r5,%fp, 3 (* at line 14 *)
	store %r3,%fp, 2 (* at line 1 *)
	addi %r3,%r7,0 (* at line 22 *)
	bl Obj.magic (* at line 22 *)
	addi %r8,%r3,0 (* at line 22 *)
	load %r7, %fp ,5 (* at line 22 *)
	load %r6, %fp ,4 (* at line 22 *)
	load %r5, %fp ,3 (* at line 14 *)
	load %r3, %fp ,2 (* at line 1 *)
	li %r9,1258291200 (* at line 22 *)
	fsub %r4, %r8,%r9 (* at line 22 *)
	jump label66 (* at line 14 *)
label65.if.true : (* Asm.Other at line 14 *)
	li %r10,0 (* at line 16 *)
	li %r11,0 (* at line 16 *)
	store %r11,%fp, 5 (* at line 16 *)
	store %r10,%fp, 4 (* at line 16 *)
	store %r5,%fp, 3 (* at line 14 *)
	store %r3,%fp, 2 (* at line 1 *)
	addi %r3,%r10,0 (* at line 16 *)
	addi %r4,%r3,0 (* at line 16 *)
	addi %r5,%r11,0 (* at line 16 *)
	bl n33.add_until1 (* at line 16 *)
	addi %r12,%r3,0 (* at line 16 *)
	load %r11, %fp ,5 (* at line 16 *)
	load %r10, %fp ,4 (* at line 16 *)
	load %r5, %fp ,3 (* at line 14 *)
	load %r3, %fp ,2 (* at line 1 *)
	li %r13,0 (* at line 17 *)
	store %r13,%fp, 7 (* at line 17 *)
	store %r12,%fp, 6 (* at line 16 *)
	addi %r3,%r13,0 (* at line 17 *)
	addi %r4,%r3,0 (* at line 17 *)
	bl n34.add_until2 (* at line 17 *)
	addi %r14,%r3,0 (* at line 17 *)
	load %r13, %fp ,7 (* at line 17 *)
	load %r12, %fp ,6 (* at line 16 *)
	load %r11, %fp ,5 (* at line 16 *)
	load %r10, %fp ,4 (* at line 16 *)
	load %r5, %fp ,3 (* at line 14 *)
	load %r3, %fp ,2 (* at line 1 *)
	sub %r15,%r3,%r14 (* at line 17 *)
	store %r15,%fp, 9 (* at line 17 *)
	store %r14,%fp, 8 (* at line 17 *)
	addi %r3,%r15,0 (* at line 17 *)
	bl float_of_int (* at line 17 *)
	addi %r16,%r3,0 (* at line 17 *)
	load %r15, %fp ,9 (* at line 17 *)
	load %r14, %fp ,8 (* at line 17 *)
	load %r13, %fp ,7 (* at line 17 *)
	load %r12, %fp ,6 (* at line 16 *)
	load %r11, %fp ,5 (* at line 16 *)
	load %r10, %fp ,4 (* at line 16 *)
	load %r5, %fp ,3 (* at line 14 *)
	load %r3, %fp ,2 (* at line 1 *)
	fadd %r4, %r12,%r16 (* at line 18 *)
label66 : (* Asm.Other at line 14 *)
	addi %r4,%r4,0 (* Global *)
	addi %r3,%r4,0 (* Global *)
	load %lr, %fp ,1 (* Global *)
	addi %sp,%fp,0 (* Global *)
	load %fp, %fp ,0 (* Global *)
	blr
n34.add_until2 : (* Asm.FunCall Global *)
	addi %fp,%sp,0 (* Global *)
	store %lr,%fp, 1 (* Global *)
	addi %sp,%sp,9 (* Global *)
	store %fp,%sp, 0 (* Global *)
	li %r6,8388608 (* at line 9 *)
	add %r7,%r3,%r6 (* at line 9 *)
	cmpd %r7,%r4(* at line 9 *)
	ble label67.if.true (* at line 9 *)
label67.if.false : (* Asm.Other at line 9 *)
	addi %r5,%r3,0 (* at line 12 *)
	jump label68 (* at line 9 *)
label67.if.true : (* Asm.Other at line 9 *)
	li %r8,8388608 (* at line 10 *)
	add %r9,%r3,%r8 (* at line 10 *)
	store %r9,%fp, 7 (* at line 10 *)
	store %r8,%fp, 6 (* at line 10 *)
	store %r7,%fp, 5 (* at line 9 *)
	store %r6,%fp, 4 (* at line 9 *)
	store %r4,%fp, 3 (* at line 8 *)
	store %r3,%fp, 2 (* at line 8 *)
	addi %r3,%r9,0 (* at line 10 *)
	addi %r4,%r4,0 (* at line 10 *)
	bl n34.add_until2 (* at line 10 *)
	addi %r5,%r3,0 (* at line 10 *)
	load %r9, %fp ,7 (* at line 10 *)
	load %r8, %fp ,6 (* at line 10 *)
	load %r7, %fp ,5 (* at line 9 *)
	load %r6, %fp ,4 (* at line 9 *)
	load %r4, %fp ,3 (* at line 8 *)
	load %r3, %fp ,2 (* at line 8 *)
label68 : (* Asm.Other at line 9 *)
	addi %r5,%r5,0 (* Global *)
	addi %r3,%r5,0 (* Global *)
	load %lr, %fp ,1 (* Global *)
	addi %sp,%fp,0 (* Global *)
	load %fp, %fp ,0 (* Global *)
	blr
n33.add_until1 : (* Asm.FunCall Global *)
	addi %fp,%sp,0 (* Global *)
	store %lr,%fp, 1 (* Global *)
	addi %sp,%sp,12 (* Global *)
	store %fp,%sp, 0 (* Global *)
	li %r7,8388608 (* at line 3 *)
	add %r8,%r3,%r7 (* at line 3 *)
	cmpd %r8,%r4(* at line 3 *)
	ble label69.if.true (* at line 3 *)
label69.if.false : (* Asm.Other at line 3 *)
	addi %r6,%r5,0 (* at line 6 *)
	jump label70 (* at line 3 *)
label69.if.true : (* Asm.Other at line 3 *)
	li %r9,8388608 (* at line 4 *)
	add %r10,%r3,%r9 (* at line 4 *)
	li %r11,1258291200 (* at line 4 *)
	fadd %r12, %r5,%r11 (* at line 4 *)
	store %r12,%fp, 10 (* at line 4 *)
	store %r11,%fp, 9 (* at line 4 *)
	store %r10,%fp, 8 (* at line 4 *)
	store %r9,%fp, 7 (* at line 4 *)
	store %r8,%fp, 6 (* at line 3 *)
	store %r7,%fp, 5 (* at line 3 *)
	store %r5,%fp, 4 (* at line 2 *)
	store %r4,%fp, 3 (* at line 2 *)
	store %r3,%fp, 2 (* at line 2 *)
	addi %r3,%r10,0 (* at line 4 *)
	addi %r4,%r4,0 (* at line 4 *)
	addi %r5,%r12,0 (* at line 4 *)
	bl n33.add_until1 (* at line 4 *)
	addi %r6,%r3,0 (* at line 4 *)
	load %r12, %fp ,10 (* at line 4 *)
	load %r11, %fp ,9 (* at line 4 *)
	load %r10, %fp ,8 (* at line 4 *)
	load %r9, %fp ,7 (* at line 4 *)
	load %r8, %fp ,6 (* at line 3 *)
	load %r7, %fp ,5 (* at line 3 *)
	load %r5, %fp ,4 (* at line 2 *)
	load %r4, %fp ,3 (* at line 2 *)
	load %r3, %fp ,2 (* at line 2 *)
label70 : (* Asm.Other at line 3 *)
	addi %r6,%r6,0 (* Global *)
	addi %r3,%r6,0 (* Global *)
	load %lr, %fp ,1 (* Global *)
	addi %sp,%fp,0 (* Global *)
	load %fp, %fp ,0 (* Global *)
	blr
